#!/usr/bin/env ruby

# resolve bin path, ignoring symlinks
require 'pathname'
bin_file = Pathname.new(__FILE__).realpath

# add self to libpath
$:.unshift File.expand_path('../../lib', bin_file)

STDOUT.sync = true

require 'commander/import'
require 'kontena/digital_ocean'

program :version, Kontena::DigitalOcean::VERSION
program :description, 'Provisions Kontena droplets to DigitalOcean'

command 'provision-master' do |c|
  c.syntax = 'provision-master'
  c.description = 'Provision master node'
  c.option '--token STRING', String, 'DO token'
  c.option '--email STRING', String, 'Kontena admin email'
  c.option '--ssh-key-name STRING', String, 'DO ssh key name'
  c.option '--kontena-version STRING', String, 'Kontena version (default: 0.6.1)'
  c.option '--name STRING', String, 'Droplet name (default: kontena-master)'
  c.option '--size STRING', String, 'Droplet size (default: 512m)'
  c.option '--region STRING', String, 'Region (default: ams3)'
  c.action do |args, options|
    raise ArgumentError.new('--token is required') unless options.token
    raise ArgumentError.new('--email is required') unless options.email
    raise ArgumentError.new('--ssh-key-name is required') unless options.ssh_key_name

    provisioner = Kontena::DigitalOcean::MasterProvisioner.new(options.token)
    provisioner.run!(
      version: options.version || '0.6.1',
      email: options.email,
      ssh_key_name: options.ssh_key_name,
      name: options.name || 'kontena-master',
      size: options.size || '512mb',
      region: options.region || 'ams3',
    )
  end
end

command 'provision-grid' do |c|
  c.syntax = 'provision-grid'
  c.description = 'Provision grid nodes'
  c.option '--token STRING', String, 'DO token'
  c.option '--master-uri STRING', String, 'Kontena master uri'
  c.option '--grid-token STRING', String, 'Grid token'
  c.option '--grid-size INTEGER', Integer, 'Initial grid size (default: 3)'
  c.option '--kontena-version STRING', String, 'Kontena version (default: 0.6.1)'
  c.option '--ssh-key-name STRING', String, 'DO ssh key name'
  c.option '--name STRING', String, 'Droplet name (default: kontena-node)'
  c.option '--size STRING', String, 'Droplet size (default: 1gb)'
  c.option '--region STRING', String, 'Region (default: ams3)'
  c.action do |args, options|
    raise ArgumentError.new('--token is required') unless options.token
    raise ArgumentError.new('--master-uri is required') unless options.master_uri
    raise ArgumentError.new('--grid-token is required') unless options.grid_token
    raise ArgumentError.new('--ssh-key-name is required') unless options.ssh_key_name

    provisioner = Kontena::DigitalOcean::GridProvisioner.new(options.token)
    provisioner.run!(
      initial_size: options.grid_size || 3,
      master_uri: options.master_uri,
      grid_token: options.grid_token,
      version: options.kontena_version || '0.6.1',
      ssh_key_name: options.ssh_key_name,
      name: options.name || 'kontena-node',
      size: options.size || '1gb',
      region: options.region || 'ams3',
    )
  end
end
